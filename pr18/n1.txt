using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration;
using System.Data;
using System.Drawing;
using System.Drawing.Drawing2D;
using System.Drawing.Imaging;
using System.IO;
using System.Linq;
using System.Net.Http.Headers;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace pr18
{
    public partial class Form1 : Form
    {
        Bitmap bm;
        Graphics g;
        Point x, y;
        Pen pen = new Pen(Color.Black, 2);
        Pen erase = new Pen(Color.White, 10);
        int i;
        bool p = false;
        int qx, qy, wx, wy, ex, ey;
        ColorDialog cd = new ColorDialog();
        Color nclr;
        Image of;

        public Form1()
        {
            InitializeComponent();
            bm = new Bitmap(picture.Width, picture.Height);
            g = Graphics.FromImage(bm);
            g.Clear(Color.White);
            picture.Image = bm;
        }

        private void picture_MouseDown(object sender, MouseEventArgs e)
        {
            p = true;
            y = e.Location;
            ex = e.X;
            ey = e.Y;
        }

        private void picture_MouseMove(object sender, MouseEventArgs e)
        {
            if (p)
            {
                if (i == 1)
                {
                    x = e.Location;
                    g.DrawLine(pen, x, y);
                    y = x;
                }
                if (i == 2)
                {
                    x = e.Location;
                    g.DrawLine(erase, x, y);
                    y = x;
                }
            }
            picture.Refresh();
            qx = e.X;
            qy = e.Y;
            wx = e.X - ex;
            wy = e.Y - ey;
        }

        private void picture_MouseUp(object sender, MouseEventArgs e)
        {
            p = false;
            wx = qx - ex;
            wy = qy - ey;
            if(i == 3)
            {
                g.DrawEllipse(pen, ex, ey, wx, wy);
            }
            if(i == 4)
            {
                g.DrawRectangle(pen, ex, ey, wx, wy);
            }
            if(i == 5)
            {
                g.DrawLine(pen, ex, ey, qx, qy);
            }
        }

        private void picture_Paint(object sender, PaintEventArgs e)
        {
            Graphics g = e.Graphics;
            if (p)
            {
                if (i == 3)
                {
                    g.DrawEllipse(pen, ex, ey, wx, wy);
                }
                if (i == 4)
                {
                    g.DrawRectangle(pen, ex, ey, wx, wy);
                }
                if (i == 5)
                {
                    g.DrawLine(pen, ex, ey, qx, qy);
                }
            }
        }

        private void pencil_Click(object sender, EventArgs e)
        {
            i = 1;
        }

        private void eraser_Click(object sender, EventArgs e)
        {
            i = 2;
        }

        private void ellipse_Click(object sender, EventArgs e)
        {
            i = 3;
        }

        private void rectangle_Click(object sender, EventArgs e)
        {
            i = 4;
        }
        private void line_Click(object sender, EventArgs e)
        {
            i = 5;
        }

        private void fill_Click(object sender, EventArgs e)
        {
            i = 7;
        }

        private void thickness_Scroll(object sender, EventArgs e)
        {
            pen.Width = thickness.Value;
        }

        private void clear_Click(object sender, EventArgs e)
        {
            i = 0;
            g.Clear(Color.White);
            picture.Image = bm;
        }

        private void color_Click(object sender, EventArgs e)
        {
            cd.ShowDialog();
            nclr = cd.Color;
            color.BackColor = cd.Color;
            pen.Color = cd.Color;
        }

        private void exit_Click(object sender, EventArgs e)
        {
            Application.Exit();
        }

        private void picture_MouseClick(object sender, MouseEventArgs e)
        {
            if (i == 7)
            {
                Point point =  sp(picture, e.Location);
                f1ll(bm, point.X, point.Y, nclr);
            }
        }

        static Point sp(PictureBox pb, Point pt)
        {
            float px = 1f * pb.Image.Width / pb.Width;
            float py = 1f * pb.Image.Height / pb.Height;
            return new Point((int)(pt.X * px), (int)(pt.Y * py));
        } 

        private void validate(Bitmap bm, Stack<Point>sp, int x, int y, Color oclr, Color nclr)
        {
            Color ex = bm.GetPixel(x, y);
            if(ex == oclr)
            {
                sp.Push(new Point(x, y));
                bm.SetPixel(x, y, nclr);
            }
        }
        public void f1ll(Bitmap bm, int x, int y, Color nclr)
        {
            Color oclr = bm.GetPixel(x, y);
            Stack<Point> pixel = new Stack<Point>();
            pixel.Push(new Point(x, y));
            bm.SetPixel(x, y, nclr);
            if(oclr == nclr)
            {
                return;
            }
            while(pixel.Count > 0)
            {
                Point pt = (Point)pixel.Pop();
                if(pt.X > 0 && pt.Y > 0 && pt.X < bm.Width - 1 && pt.Y < bm.Height - 1)
                {
                    validate(bm, pixel, pt.X - 1, pt.Y, oclr, nclr);
                    validate(bm, pixel, pt.X, pt.Y - 1, oclr, nclr);
                    validate(bm, pixel, pt.X + 1, pt.Y, oclr, nclr);
                    validate(bm, pixel, pt.X, pt.Y + 1, oclr, nclr);
                }
            }
        }


        private void save_Click(object sender, EventArgs e)
        {
            SaveFileDialog sfd = new SaveFileDialog();
            sfd.Filter = "Jpeg Image|*.jpg|Bitmap Image *.bmp|";
            sfd.ShowDialog();
            if(sfd.FileName != "")
            {
                FileStream fs = (FileStream)sfd.OpenFile();
                switch (sfd.FilterIndex)
                {
                    case 1:
                        this.picture.Image.Save(fs, System.Drawing.Imaging.ImageFormat.Jpeg);
                        break;
                    case 2:
                        this.picture.Image.Save(fs, System.Drawing.Imaging.ImageFormat.Bmp);
                        break;
                }
                fs.Close();
            }
        }
        private void open_Click(object sender, EventArgs e)
        {
            OpenFileDialog ofd = new OpenFileDialog();
            DialogResult dr = ofd.ShowDialog();
            if(dr == DialogResult.OK)
            {
                of = Image.FromFile(ofd.FileName);
                picture.Image = of;
            }
        }

    }
}